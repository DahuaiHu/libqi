#from codegenerator import *
/*
** $autogen
**
** Author(s):
**  - Cedric GESTES <gestes@aldebaran-robotics.com>
**
** Copyright (C) 2010 Aldebaran Robotics
*/

#raw
#ifndef I_WANT_HXX
#error("do not include hxx in your code")
#endif

#ifndef  QI_FUNCTORS_FUNCTOR_HXX_
# define QI_FUNCTORS_FUNCTOR_HXX_

# include <qi/functors/functor.hpp>

namespace qi {
#end raw
#for $i in $count

  template <$generate_typename_list($i, end = True) typename R>
  class Functor_${i} : public Functor
  {
  public:
    typedef R(*FunctionType) ($generate_param_list($i));

    Functor_${i}(FunctionType pFunction)
      : fFunction(pFunction)
    {}

    R operator()($generate_param_list($i)) {
      return (R)(*fFunction)($generate_arg_list($i));
    }

    void call(const qi::Messaging::ArgumentList &params, qi::Messaging::ReturnValue& result) {
      AL_FUNCTOR_ASSUME_NBR_PARAMS(params, $i);
      result.value((*fFunction)($generate_callparam_list($i)));
    }

  private:
    FunctionType  fFunction;
  };

#end for
#raw
}
#endif  // QI_FUNCTORS_FUNCTOR_HXX_
#end raw
