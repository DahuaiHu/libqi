#from codegenerator import *
/*
** $autogen
**
** Author(s):
**  - Cedric GESTES <gestes@aldebaran-robotics.com>
**
** Copyright (C) 2010 Aldebaran Robotics
*/

#raw
#ifndef I_WANT_HXX
#error "do not include hxx in your code"
#endif

#ifndef  QI_FUNCTORS_VOIDMEMBERFUNCTOR_HXX_
# define QI_FUNCTORS_VOIDMEMBERFUNCTOR_HXX_

# include <qi/functors/functor.hpp>

namespace qi {
#end raw
#for $i in $count

  template <$generate_typename_list($i, end = True) typename C>
  class MemberFunctor_${i}<$generate_type_list($i, end = True) C, void> : public Functor
  {
  public:
    typedef void(C::*FunctionType) ($generate_param_list($i));

    MemberFunctor_${i}(C *pObject, FunctionType pFunction)
      : fObject(pObject),
        fFunction(pFunction) {
    }

    void operator()($generate_param_list($i)) {
      (fObject->*fFunction)($generate_arg_list($i));
    }

    void call(const qi::Messaging::ArgumentList &params, qi::Messaging::ReturnValue&) {
      AL_FUNCTOR_ASSUME_NBR_PARAMS(params, $i);
      (fObject->*fFunction)($generate_callparam_list($i));
    };

  private:
    C            *fObject;
    FunctionType  fFunction;
  };

#end for
#raw
}
#endif  // QI_FUNCTORS_VOIDMEMBERFUNCTOR_HXX_
#end raw
