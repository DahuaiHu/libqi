/**
 * \class qi::Atomic
 * \includename{qi/atomic.hpp}
 * \brief Atomic operations on integers.
 *
 * \verbatim
 * This class permits to do operations on a integer value from multiple threads,
 * with the assurance that each operation will not be done from multiple threads
 * at the same time.
 *
 * .. warning::
 *     To make sure the code is cross platform, only types
 *     which have the same size as ``int`` are supported
 * \endverbatim
 */

/**
 * \fn qi::Atomic::Atomic()
 * \brief Default atomic constructor, setting value to 0.
 */

/**
 * \fn qi::Atomic::Atomic(T)
 * \brief Atomic constructor setting value to its parameter.
 * \param value The default value of the atomic.
 */

/**
 * \fn qi::Atomic::operator++()
 * \brief Atomic increment of the value.
 */

/**
 * \fn qi::Atomic::operator--()
 * \brief Atomic decement of the value.
 */

/**
 * \fn qi::Atomic::operator*()
 * \brief Returns the current value of the atomic.
 */

/**
 * \fn qi::Atomic::operator=()
 * \brief Assign value to the object.
 * \param value new value
 */

/**
 * \fn qi::Atomic::swap()
 * \brief Change current value and return previous one.
 * \param value new value
 */


/**
 * \fn qi::testAndSet()
 * \brief Cross-platform implementation of atomic Test-And-Set.
 * \param cond pointer to the value to test and set.
 * \return true (1) if cond is 0, false (0) otherwise.
 */
