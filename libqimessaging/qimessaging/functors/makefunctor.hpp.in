#from codegenerator import *
#pragma once
/*
* $autogen
*
*  Author(s):
*  - Cedric GESTES <gestes@aldebaran-robotics.com>
*  - Chris  Kilner <ckilner@aldebaran-robotics.com>
*  Copyright (C) 2010 Aldebaran Robotics
*/

#raw
#ifndef _QI_FUNCTORS_MAKEFUNCTOR_HPP_
#define _QI_FUNCTORS_MAKEFUNCTOR_HPP_

#include <qimessaging/functors/functor.hpp>

namespace qi
{
#end raw
#for $i in $count

  template <${generate_typename_list($i, end = True)}typename C, typename R>
  Functor *makeFunctor(C *obj, R (C::*f) ($generate_param_list($i))) {
    return new detail::MemberFunctor_$i<${generate_type_list($i, end = True)}C, R>(obj, f);
  }

  template <${generate_typename_list($i, end = True)}typename R>
  Functor *makeFunctor(R (*f) ($generate_param_list($i))) {
    return new detail::Functor_$i<${generate_type_list($i, end = True)}R>(f);
  }

#end for
#raw
}
#endif  // _QI_FUNCTORS_MAKEFUNCTOR_HPP_
#end raw
